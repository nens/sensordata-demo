# App is only used on the server. Locally, you'd run it just on your laptop.
#
# Local dev: just do `docker compose up frost`, that starts frost+db
#
# Extra for production: an nginx+basic-auth in front of FROST.

services:
  app:
    build: .
    ports:
      - 7772:8000
    environment:
      # These can be passed from a .env on the server
      - SENTRY_DSN
      - API_USER
      - API_USER_HASH
      - FROST_URL
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    restart: unless-stopped

  frost:
    image: fraunhoferiosb/frost-server:latest
    environment:
      # - serviceRootUrl=http://localhost:8080/FROST-Server/
      - serviceRootUrl=https://sensordata-demo-frost.staging.lizard.net/FROST-Server/
      - http_cors_enable=true
      - http_cors_allowed_origins=*
      - persistence_db_driver=org.postgresql.Driver
      - persistence_db_url=jdbc:postgresql://database:5432/sensorthings
      - persistence_db_username=sensorthings
      - persistence_db_password=OnlyInternalUseSoOk
      - persistence_autoUpdateDatabase=true
      - auth.provider=de.fraunhofer.iosb.ilt.frostserver.auth.basic.BasicAuthProvider
      - auth.autoUpdateDatabase=true
    ports:
      - 8080:8080
    depends_on:
      - database
    restart: unless-stopped

  database:
    image: postgis/postgis:14-3.2-alpine
    environment:
      - POSTGRES_DB=sensorthings
      - POSTGRES_USER=sensorthings
      - POSTGRES_PASSWORD=OnlyInternalUseSoOk
    volumes:
      - postgis_volume:/var/lib/postgresql/data
    restart: unless-stopped

  nginx:
    image: nginx:1.27
    ports:
      - "0.0.0.0:7773:80"
    # Don't start this locally as it will miss the htpasswd config file.
    volumes:
      - ./etc/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./etc/htpasswd:/etc/htpasswd
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    restart: unless-stopped


volumes:
  postgis_volume:
